#!/bin/bash

if [[ "$1" == "-h" || "$1" == "--help" ]]; then cat <<HELP
Ping all machines on the LAN subnet.
http://benalman.com/

Usage: `basename "$0"`

Returns a list of IPs that were pingable. Maybe it'll help you find that
server you lost. It didn't help me.

Copyright (c) 2011 "Cowboy" Ben Alman
Licensed under the MIT license.
http://benalman.com/about/license/
HELP
exit; fi

# Temp file.
tmp="$(mktemp /tmp/tmp.XXXXX)"

# Write en* interfaces to temp file.
for i in $(ifconfig | perl -nle'/^(e\w+)/ && print $1'); do
  ifconfig $i | perl -nle'/inet (?:addr:)?(\d+\.\d+\.\d+)\.\d+/ && print $1' >> "$tmp"
done

# Read sorted, uniqued partial IP list into an array.
read -a partials < <(cat "$tmp" | sort -u | tr '\n' ' ')
# Clear temp file.
:> "$tmp"

# Iterate over partial IP list.
for partial in "${partials[@]}"; do
  echo -n "Pinging $partial.*"
  # Ping XXX.XXX.XXX.1 - XXX.XXX.XXX.254 in batches, outputting results to temp file.
  seq 254 | xargs -P 128 -I % bash -c \
  "{ ping -c 1 -t 1 $partial.% >/dev/null 2>&1 && echo $partial.% || echo; } >> $tmp"
  echo
done
# Wait until all IPs have been pinged.
while (( "$(wc -l "$tmp" | awk '{print $1}')" < ${#partials[*]} * 254 )); do sleep 0.1; done

# Sort IPs, echo results, etc.
ips="$(sort -n -t . -k 1 -k 2 -k 3 -k 4 "$tmp" | grep . --color=never)"
if [[ "$ips" ]]; then
  echo "$ips"
else
  echo "Nothing found!"
fi

# Cleanup.
rm "$tmp"
